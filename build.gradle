//file:noinspection GroovyAccessibility
import net.darkhax.curseforgegradle.TaskPublishCurseForge

plugins {
	id 'fabric-loom' version '1.2-SNAPSHOT'
	id 'maven-publish'
	id "com.modrinth.minotaur" version "2.+"
	id "co.uzzu.dotenv.gradle" version "2.0.0"
	id "net.darkhax.curseforgegradle" version "1.1.+"
	id "com.github.breadmoirai.github-release" version "2.4.+"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url "https://maven.kikugie.dev/releases/" }
	maven { url "https://jitpack.io" }
	maven { url "https://maven.terraformersmc.com/releases/" }
	maven { url "https://maven.isxander.dev/releases" }
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://plugins.gradle.org/m2/" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation fabricApi.module("fabric-resource-loader-v0", project.fabric_api_version)
	modApi "dev.kikugie.elytratrims:${project.elytratrims_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

def debug = false

tasks.register("release") {
	group "publishing"
	dependsOn "modrinth"
	dependsOn "githubRelease"
	dependsOn "curseforge"
	if (!debug) dependsOn "publish"
}

modrinth {
	token = env.fetchOrNull("MODRINTH_TOKEN")
	projectId = "elytra-trims-extensions"
	versionName = "Elytra Trims Extensions " + project.mod_version
	versionNumber = project.mod_version
	versionType = "release"
	uploadFile = remapJar
	additionalFiles = [sourcesJar]
	gameVersions = project.modrinth_versions.split(" ").toList()
	loaders = ["fabric", "quilt"]
	dependencies {
		required.project "elytra-trims"
	}
	syncBodyFrom = rootProject.file("README.md").text
	changelog = rootProject.file("CHANGELOG.md").text
	failSilently = true
	debugMode = debug
}

githubRelease {
	token = env.fetch("GITHUB_TOKEN", "")
	owner = "kikugie"
	repo = "elytra-trims-extensions"
	tagName = "v${project.mod_version}"
	targetCommitish = "main"
	releaseName = "Elytra Trims Extensions " + project.mod_version
	body = rootProject.file("CHANGELOG.md").text
	releaseAssets = [remapJar, sourcesJar]
	dryRun = debug
}

tasks.register("curseforge", TaskPublishCurseForge) {
	group "publishing"
	disableVersionDetection()
	apiToken = env.fetch("CURSEFORGE_TOKEN", "")

	def mainFile = upload(project.project_id, remapJar)
	mainFile.releaseType = "release"
	mainFile.displayName = "Elytra Trims Extensions " + project.mod_version
	mainFile.changelog = rootProject.file("CHANGELOG.md").text
	mainFile.changelogType = "markdown"
	mainFile.addRequirement "elytra-trims"
	mainFile.addModLoader "fabric", "quilt"
	for (String version : project.modrinth_versions.split(" ")) {
		mainFile.addGameVersion version
	}
	debugMode = debug
}

// configure the maven publication
publishing {
	repositories {
		maven {
			name = "kikugieMaven"
			url = "https://maven.kikugie.dev/releases"
			credentials(PasswordCredentials)
			authentication {
				basic(BasicAuthentication)
			}
		}
	}

	publications {
		mavenJava(MavenPublication) {
			groupId = project.maven_group
			artifactId = project.archives_base_name
			version = project.mod_version

			from components.java
		}
	}
}