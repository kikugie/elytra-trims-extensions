//file:noinspection GroovyAccessibility
plugins {
	id 'fabric-loom' version '1.2-SNAPSHOT'
	id 'maven-publish'
	id "com.modrinth.minotaur" version "2.+"
	id "co.uzzu.dotenv.gradle" version "2.0.0"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url "https://maven.kikugie.dev/releases/" }
	maven { url "https://jitpack.io" }
	maven { url "https://maven.terraformersmc.com/releases/" }
	maven { url "https://maven.isxander.dev/releases" }
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://plugins.gradle.org/m2/" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation fabricApi.module("fabric-resource-loader-v0", project.fabric_api_version)
	modApi "dev.kikugie.elytratrims:${project.elytratrims_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

modrinth {
	token = env.fetchOrNull("MODRINTH_TOKEN")
	projectId = "elytra-trims"
	versionName = "Elytra Trims Extensions" + project.mod_version
	versionNumber = project.mod_version
	versionType = "release"
	uploadFile = remapJar
	additionalFiles = [sourcesJar]
	gameVersions = project.modrinth_versions.split(" ").toList()
	loaders = ["fabric", "quilt"]
	dependencies {
		required.project "elytra-trims"
	}
	syncBodyFrom = rootProject.file("README.md").text
	changelog = rootProject.file("CHANGELOG.md").text
	failSilently = true
	debugMode = true
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}